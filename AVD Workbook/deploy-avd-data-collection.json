{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
                     "description":  "Deploy infrastructure for AVD storage analytics - Log Analytics workspace and Data Collection Rule"
                 },
    "parameters":  {
                       "logAnalyticsWorkspaceName":  {
                                                         "type":  "string",
                                                         "defaultValue":  "AVDStorageAuditLAW",
                                                         "metadata":  {
                                                                          "description":  "Name of the Log Analytics workspace for AVD storage data collection",
                                                                          "strongType":  "Microsoft.OperationalInsights/workspaces"
                                                                      }
                                                     },
                       "dataRetentionDays":  {
                                                 "type":  "int",
                                                 "defaultValue":  90,
                                                 "minValue":  30,
                                                 "maxValue":  730,
                                                 "metadata":  {
                                                                  "description":  "Number of days to retain log data"
                                                              }
                                             },
                       "enableHostPoolDiagnostics":  {
                                                         "type":  "bool",
                                                         "defaultValue":  true,
                                                         "metadata":  {
                                                                          "description":  "Enable diagnostic settings for all AVD Host Pools in subscription (configured manually after deployment)"
                                                                      }
                                                     },
                       "enableSessionHostDiagnostics":  {
                                                            "type":  "bool",
                                                            "defaultValue":  true,
                                                            "metadata":  {
                                                                             "description":  "Enable diagnostic settings and performance counters for AVD Session Hosts (configured manually after deployment)"
                                                                         }
                                                        },
                       "enableStorageDiagnostics":  {
                                                        "type":  "bool",
                                                        "defaultValue":  true,
                                                        "metadata":  {
                                                                         "description":  "Enable diagnostic settings for Storage Accounts used by AVD (configured manually after deployment)"
                                                                     }
                                                    },
                       "enableANFDiagnostics":  {
                                                    "type":  "bool",
                                                    "defaultValue":  true,
                                                    "metadata":  {
                                                                     "description":  "Enable diagnostic settings for Azure NetApp Files volumes (configured manually after deployment)"
                                                                 }
                                                }
                   },
    "variables":  {
                      "location":  "[resourceGroup().location]",
                      "dataCollectionRuleName":  "[concat(\u0027dcr-avd-storage-\u0027, uniqueString(resourceGroup().id))]",
                      "dataCollectionEndpointName":  "[concat(\u0027dce-avd-storage-\u0027, uniqueString(resourceGroup().id))]",
                      "managedIdentityName":  "[concat(\u0027id-avd-storage-\u0027, uniqueString(resourceGroup().id))]",
                      "workbookName":  "[guid(resourceGroup().id, \u0027avd-storage-workbook\u0027)]"
                  },
    "resources":  [
                      {
                          "type":  "Microsoft.ManagedIdentity/userAssignedIdentities",
                          "apiVersion":  "2023-01-31",
                          "name":  "[variables(\u0027managedIdentityName\u0027)]",
                          "location":  "[variables(\u0027location\u0027)]"
                      },
                      {
                          "type":  "Microsoft.OperationalInsights/workspaces",
                          "apiVersion":  "2023-09-01",
                          "name":  "[parameters(\u0027logAnalyticsWorkspaceName\u0027)]",
                          "location":  "[variables(\u0027location\u0027)]",
                          "properties":  {
                                             "sku":  {
                                                         "name":  "PerGB2018"
                                                     },
                                             "retentionInDays":  "[parameters(\u0027dataRetentionDays\u0027)]",
                                             "features":  {
                                                              "enableLogAccessUsingOnlyResourcePermissions":  true
                                                          }
                                         }
                      },
                      {
                          "type":  "Microsoft.Insights/dataCollectionEndpoints",
                          "apiVersion":  "2022-06-01",
                          "name":  "[variables(\u0027dataCollectionEndpointName\u0027)]",
                          "location":  "[variables(\u0027location\u0027)]",
                          "properties":  {
                                             "description":  "Data collection endpoint for AVD storage analytics",
                                             "networkAcls":  {
                                                                 "publicNetworkAccess":  "Enabled"
                                                             }
                                         }
                      },
                      {
                          "type":  "Microsoft.Insights/dataCollectionRules",
                          "apiVersion":  "2022-06-01",
                          "name":  "[variables(\u0027dataCollectionRuleName\u0027)]",
                          "location":  "[variables(\u0027location\u0027)]",
                          "dependsOn":  [
                                            "[resourceId(\u0027Microsoft.OperationalInsights/workspaces\u0027, parameters(\u0027logAnalyticsWorkspaceName\u0027))]",
                                            "[resourceId(\u0027Microsoft.Insights/dataCollectionEndpoints\u0027, variables(\u0027dataCollectionEndpointName\u0027))]"
                                        ],
                          "properties":  {
                                             "description":  "Data collection rule for AVD storage performance metrics",
                                             "dataCollectionEndpointId":  "[resourceId(\u0027Microsoft.Insights/dataCollectionEndpoints\u0027, variables(\u0027dataCollectionEndpointName\u0027))]",
                                             "dataSources":  {
                                                                 "performanceCounters":  [
                                                                                             {
                                                                                                 "name":  "VMPerfCounters",
                                                                                                 "streams":  [
                                                                                                                 "Microsoft-Perf"
                                                                                                             ],
                                                                                                 "scheduledTransferPeriod":  "PT1M",
                                                                                                 "samplingFrequencyInSeconds":  60,
                                                                                                 "counterSpecifiers":  [
                                                                                                                           "\\LogicalDisk(*)\\Disk Read Bytes/sec",
                                                                                                                           "\\LogicalDisk(*)\\Disk Write Bytes/sec",
                                                                                                                           "\\LogicalDisk(*)\\Disk Reads/sec",
                                                                                                                           "\\LogicalDisk(*)\\Disk Writes/sec",
                                                                                                                           "\\LogicalDisk(*)\\Current Disk Queue Length",
                                                                                                                           "\\LogicalDisk(*)\\Avg. Disk sec/Read",
                                                                                                                           "\\LogicalDisk(*)\\Avg. Disk sec/Write",
                                                                                                                           "\\LogicalDisk(*)\\Free Megabytes",
                                                                                                                           "\\LogicalDisk(*)\\% Free Space",
                                                                                                                           "\\Memory\\Available MBytes",
                                                                                                                           "\\Memory\\% Committed Bytes In Use",
                                                                                                                           "\\Processor(_Total)\\% Processor Time",
                                                                                                                           "\\System\\Processor Queue Length",
                                                                                                                           "\\Network Interface(*)\\Bytes Total/sec",
                                                                                                                           "\\Network Interface(*)\\Current Bandwidth",
                                                                                                                           "\\Terminal Services\\Active Sessions",
                                                                                                                           "\\Terminal Services\\Inactive Sessions",
                                                                                                                           "\\User Profile Service\\Profile loads",
                                                                                                                           "\\User Profile Service\\Profile unloads"
                                                                                                                       ]
                                                                                             }
                                                                                         ]
                                                             },
                                             "destinations":  {
                                                                  "logAnalytics":  [
                                                                                       {
                                                                                           "workspaceResourceId":  "[resourceId(\u0027Microsoft.OperationalInsights/workspaces\u0027, parameters(\u0027logAnalyticsWorkspaceName\u0027))]",
                                                                                           "name":  "AVDStorageWorkspace"
                                                                                       }
                                                                                   ]
                                                              },
                                             "dataFlows":  [
                                                               {
                                                                   "streams":  [
                                                                                   "Microsoft-Perf"
                                                                               ],
                                                                   "destinations":  [
                                                                                        "AVDStorageWorkspace"
                                                                                    ]
                                                               }
                                                           ]
                                         }
                      },
                      {
                          "type":  "Microsoft.Insights/workbooks",
                          "apiVersion":  "2022-04-01",
                          "name":  "[variables(\u0027workbookName\u0027)]",
                          "location":  "[variables(\u0027location\u0027)]",
                          "dependsOn":  [
                                            "[resourceId(\u0027Microsoft.OperationalInsights/workspaces\u0027, parameters(\u0027logAnalyticsWorkspaceName\u0027))]"
                                        ],
                          "kind":  "shared",
                          "properties":  {
                                             "displayName":  "AVD Storage Analytics \u0026 ANF Planning",
                                             "description":  "Comprehensive analysis of AVD storage performance, user patterns, and Azure NetApp Files sizing recommendations",
                                             "category":  "Azure Virtual Desktop",
                                             "sourceId":  "[resourceId(\u0027Microsoft.OperationalInsights/workspaces\u0027, parameters(\u0027logAnalyticsWorkspaceName\u0027))]",
                                             "serializedData":  "{\\\"version\\\":\\\"Notebook/1.0\\\",\\\"items\\\":[{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"# AVD Storage Analytics \\\\u0026 ANF Planning\\\\r\\\\n## Comprehensive analysis of AVD storage performance, user patterns, and Azure NetApp Files sizing recommendations\\\\r\\\\n\\\\r\\\\n### ðŸ“Š This workbook provides:\\\\r\\\\n- **Real-time Storage Performance Analysis** - IOPS, throughput, latency metrics\\\\r\\\\n- **User Session Patterns** - Peak usage times, concurrent users, session duration\\\\r\\\\n- **Profile Analytics** - FSLogix container sizes, growth trends, performance\\\\r\\\\n- **ANF Sizing Recommendations** - Performance tier suggestions based on actual usage\\\\r\\\\n- **Cost Optimization Insights** - Right-sizing recommendations and cost projections\\\\r\\\\n\\\\r\\\\n---\\\"},\\\"name\\\":\\\"Title\\\"},{\\\"type\\\":9,\\\"content\\\":{\\\"version\\\":\\\"KqlParameterItem/1.0\\\",\\\"parameters\\\":[{\\\"id\\\":\\\"timeRange\\\",\\\"version\\\":\\\"KqlParameterItem/1.0\\\",\\\"name\\\":\\\"TimeRange\\\",\\\"label\\\":\\\"Time Range\\\",\\\"type\\\":4,\\\"description\\\":\\\"Select the time range for analysis\\\",\\\"isRequired\\\":true,\\\"value\\\":{\\\"durationMs\\\":604800000},\\\"typeSettings\\\":{\\\"selectableValues\\\":[{\\\"durationMs\\\":3600000,\\\"displayName\\\":\\\"Last 1 hour\\\"},{\\\"durationMs\\\":86400000,\\\"displayName\\\":\\\"Last 24 hours\\\"},{\\\"durationMs\\\":604800000,\\\"displayName\\\":\\\"Last 7 days\\\"},{\\\"durationMs\\\":2592000000,\\\"displayName\\\":\\\"Last 30 days\\\"}]}},{\\\"id\\\":\\\"workspace\\\",\\\"version\\\":\\\"KqlParameterItem/1.0\\\",\\\"name\\\":\\\"Workspace\\\",\\\"label\\\":\\\"Log Analytics Workspace\\\",\\\"type\\\":5,\\\"description\\\":\\\"Select the Log Analytics workspace containing AVD data\\\",\\\"isRequired\\\":true,\\\"query\\\":\\\"Resources\\\\r\\\\n| where type == \\\\u0027microsoft.operationalinsights/workspaces\\\\u0027\\\\r\\\\n| project id, name, subscriptionId, resourceGroup\\\\r\\\\n| order by name asc\\\",\\\"crossComponentResources\\\":[\\\"value::all\\\"],\\\"value\\\":\\\"value::1\\\",\\\"typeSettings\\\":{\\\"resourceTypeFilter\\\":{\\\"microsoft.operationalinsights/workspaces\\\":true},\\\"additionalResourceOptions\\\":[\\\"value::1\\\"],\\\"showDefault\\\":false},\\\"defaultValue\\\":\\\"value::1\\\"},{\\\"id\\\":\\\"hostPools\\\",\\\"version\\\":\\\"KqlParameterItem/1.0\\\",\\\"name\\\":\\\"HostPools\\\",\\\"label\\\":\\\"Host Pools\\\",\\\"type\\\":2,\\\"description\\\":\\\"Select specific host pools to analyze\\\",\\\"multiSelect\\\":true,\\\"quote\\\":\\\"\\\\u0027\\\",\\\"delimiter\\\":\\\",\\\",\\\"query\\\":\\\"WVDConnections\\\\r\\\\n| where TimeGenerated {TimeRange}\\\\r\\\\n| distinct ResourceAlias\\\\r\\\\n| sort by ResourceAlias asc\\\",\\\"value\\\":[\\\"value::all\\\"],\\\"typeSettings\\\":{\\\"additionalResourceOptions\\\":[\\\"value::all\\\"],\\\"selectAllValue\\\":\\\"*\\\"},\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\"}]},\\\"name\\\":\\\"Parameters\\\"},{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"## ðŸ“ˆ Executive Summary Dashboard\\\\r\\\\n\\\\r\\\\nKey performance indicators and quick insights for storage planning decisions.\\\"},\\\"name\\\":\\\"ExecutiveSummaryHeader\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"let timeRange = {TimeRange};\\\\r\\\\nlet hostPools = dynamic([{HostPools}]);\\\\r\\\\n// Storage Performance Overview\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName in (\\\\\\\"Disk Read Bytes/sec\\\\\\\", \\\\\\\"Disk Write Bytes/sec\\\\\\\", \\\\\\\"Current Disk Queue Length\\\\\\\", \\\\\\\"Avg. Disk sec/Read\\\\\\\", \\\\\\\"Avg. Disk sec/Write\\\\\\\")\\\\r\\\\n| where InstanceName != \\\\\\\"_Total\\\\\\\" and InstanceName !contains \\\\\\\"Harddisk\\\\\\\"\\\\r\\\\n| extend DiskLetter = extract(@\\\\\\\"([A-Z]):\\\\\\\", 1, InstanceName)\\\\r\\\\n| where DiskLetter in (\\\\\\\"C\\\\\\\", \\\\\\\"D\\\\\\\", \\\\\\\"O\\\\\\\", \\\\\\\"P\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"T\\\\\\\", \\\\\\\"U\\\\\\\", \\\\\\\"V\\\\\\\", \\\\\\\"W\\\\\\\", \\\\\\\"X\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"Z\\\\\\\") // Common profile/data drives\\\\r\\\\n| summarize \\\\r\\\\n    AvgReadThroughputMBps = avg(iff(CounterName == \\\\\\\"Disk Read Bytes/sec\\\\\\\", CounterValue / 1048576, 0)),\\\\r\\\\n    AvgWriteThroughputMBps = avg(iff(CounterName == \\\\\\\"Disk Write Bytes/sec\\\\\\\", CounterValue / 1048576, 0)),\\\\r\\\\n    PeakReadThroughputMBps = max(iff(CounterName == \\\\\\\"Disk Read Bytes/sec\\\\\\\", CounterValue / 1048576, 0)),\\\\r\\\\n    PeakWriteThroughputMBps = max(iff(CounterName == \\\\\\\"Disk Write Bytes/sec\\\\\\\", CounterValue / 1048576, 0)),\\\\r\\\\n    AvgQueueDepth = avg(iff(CounterName == \\\\\\\"Current Disk Queue Length\\\\\\\", CounterValue, 0)),\\\\r\\\\n    AvgReadLatencyMs = avg(iff(CounterName == \\\\\\\"Avg. Disk sec/Read\\\\\\\", CounterValue * 1000, 0)),\\\\r\\\\n    AvgWriteLatencyMs = avg(iff(CounterName == \\\\\\\"Avg. Disk sec/Write\\\\\\\", CounterValue * 1000, 0))\\\\r\\\\n    by Computer, DiskLetter\\\\r\\\\n| extend \\\\r\\\\n    TotalThroughputMBps = AvgReadThroughputMBps + AvgWriteThroughputMBps,\\\\r\\\\n    PeakTotalThroughputMBps = PeakReadThroughputMBps + PeakWriteThroughputMBps,\\\\r\\\\n    AvgLatencyMs = (AvgReadLatencyMs + AvgWriteLatencyMs) / 2\\\\r\\\\n| summarize \\\\r\\\\n    TotalSessionHosts = dcount(Computer),\\\\r\\\\n    AvgThroughputMBps = round(avg(TotalThroughputMBps), 1),\\\\r\\\\n    PeakThroughputMBps = round(max(PeakTotalThroughputMBps), 1),\\\\r\\\\n    AvgLatencyMs = round(avg(AvgLatencyMs), 2),\\\\r\\\\n    MaxQueueDepth = round(max(AvgQueueDepth), 1)\\\\r\\\\n| extend \\\\r\\\\n    ANFPerformanceTier = case(\\\\r\\\\n        PeakThroughputMBps \\\\u003e 400, \\\\\\\"Ultra\\\\\\\",\\\\r\\\\n        PeakThroughputMBps \\\\u003e 160, \\\\\\\"Premium\\\\\\\", \\\\r\\\\n        \\\\\\\"Standard\\\\\\\"\\\\r\\\\n    ),\\\\r\\\\n    StorageRecommendation = case(\\\\r\\\\n        AvgLatencyMs \\\\u003e 20, \\\\\\\"Consider Premium/Ultra ANF for lower latency\\\\\\\",\\\\r\\\\n        PeakThroughputMBps \\\\u003e 100, \\\\\\\"Premium ANF recommended for throughput requirements\\\\\\\",\\\\r\\\\n        \\\\\\\"Standard ANF may be sufficient\\\\\\\"\\\\r\\\\n    )\\\",\\\"size\\\":3,\\\"title\\\":\\\"ðŸŽ¯ Storage Performance Summary\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"table\\\",\\\"gridSettings\\\":{\\\"formatters\\\":[{\\\"columnMatch\\\":\\\"TotalSessionHosts\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"blue\\\"}},{\\\"columnMatch\\\":\\\"AvgThroughputMBps\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"green\\\"},\\\"numberFormat\\\":{\\\"unit\\\":0,\\\"options\\\":{\\\"style\\\":\\\"decimal\\\",\\\"maximumFractionDigits\\\":1}}},{\\\"columnMatch\\\":\\\"PeakThroughputMBps\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"orange\\\"},\\\"numberFormat\\\":{\\\"unit\\\":0,\\\"options\\\":{\\\"style\\\":\\\"decimal\\\",\\\"maximumFractionDigits\\\":1}}},{\\\"columnMatch\\\":\\\"AvgLatencyMs\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"red\\\",\\\"thresholds\\\":[{\\\"color\\\":\\\"green\\\",\\\"value\\\":0},{\\\"color\\\":\\\"yellow\\\",\\\"value\\\":10},{\\\"color\\\":\\\"red\\\",\\\"value\\\":20}]}},{\\\"columnMatch\\\":\\\"ANFPerformanceTier\\\",\\\"formatter\\\":18,\\\"formatOptions\\\":{\\\"thresholds\\\":[{\\\"color\\\":\\\"green\\\",\\\"value\\\":\\\"Standard\\\"},{\\\"color\\\":\\\"yellow\\\",\\\"value\\\":\\\"Premium\\\"},{\\\"color\\\":\\\"red\\\",\\\"value\\\":\\\"Ultra\\\"}]}}]}},\\\"name\\\":\\\"StoragePerformanceSummary\\\"},{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"## ðŸ‘¥ User Session Analytics\\\\r\\\\n\\\\r\\\\nAnalyze user patterns, peak usage times, and session characteristics for capacity planning.\\\"},\\\"name\\\":\\\"UserSessionHeader\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// User Session Patterns and Peak Usage Analysis\\\\r\\\\nlet timeRange = {TimeRange};\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName == \\\\\\\"Active Sessions\\\\\\\"\\\\r\\\\n| where ObjectName == \\\\\\\"Terminal Services\\\\\\\"\\\\r\\\\n| summarize \\\\r\\\\n    ActiveSessions = avg(CounterValue),\\\\r\\\\n    PeakSessions = max(CounterValue)\\\\r\\\\n    by Computer, bin(TimeGenerated, 1h)\\\\r\\\\n| summarize \\\\r\\\\n    TotalSessionHosts = dcount(Computer),\\\\r\\\\n    AvgConcurrentUsers = round(avg(ActiveSessions), 0),\\\\r\\\\n    PeakConcurrentUsers = round(max(PeakSessions), 0),\\\\r\\\\n    PeakHour = format_datetime(arg_max(TimeGenerated, PeakSessions), \\\\\\\"yyyy-MM-dd HH:mm\\\\\\\")\\\\r\\\\n    by bin(TimeGenerated, 1h)\\\\r\\\\n| extend \\\\r\\\\n    HourOfDay = datetime_part(\\\\\\\"hour\\\\\\\", TimeGenerated),\\\\r\\\\n    DayOfWeek = format_datetime(TimeGenerated, \\\\\\\"dddd\\\\\\\")\\\\r\\\\n| order by TimeGenerated asc\\\",\\\"size\\\":0,\\\"title\\\":\\\"ðŸ“Š Hourly User Session Patterns\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"timechart\\\"},\\\"name\\\":\\\"UserSessionPatterns\\\"},{\\\"type\\\":12,\\\"content\\\":{\\\"version\\\":\\\"NotebookGroup/1.0\\\",\\\"groupType\\\":\\\"editable\\\",\\\"items\\\":[{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// Peak Usage Hours Analysis\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName == \\\\\\\"Active Sessions\\\\\\\"\\\\r\\\\n| where ObjectName == \\\\\\\"Terminal Services\\\\\\\"\\\\r\\\\n| extend HourOfDay = datetime_part(\\\\\\\"hour\\\\\\\", TimeGenerated)\\\\r\\\\n| summarize \\\\r\\\\n    AvgSessions = avg(CounterValue),\\\\r\\\\n    PeakSessions = max(CounterValue)\\\\r\\\\n    by HourOfDay\\\\r\\\\n| order by HourOfDay asc\\\\r\\\\n| extend Hour = strcat(HourOfDay, \\\\\\\":00\\\\\\\")\\\",\\\"size\\\":1,\\\"title\\\":\\\"ðŸ• Peak Usage Hours\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"barchart\\\"},\\\"customWidth\\\":\\\"50\\\",\\\"name\\\":\\\"PeakUsageHours\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// User Profile Performance Analysis\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName in (\\\\\\\"Profile loads\\\\\\\", \\\\\\\"Profile unloads\\\\\\\")\\\\r\\\\n| where ObjectName == \\\\\\\"User Profile Service\\\\\\\"\\\\r\\\\n| summarize \\\\r\\\\n    ProfileLoads = sum(iff(CounterName == \\\\\\\"Profile loads\\\\\\\", CounterValue, 0)),\\\\r\\\\n    ProfileUnloads = sum(iff(CounterName == \\\\\\\"Profile unloads\\\\\\\", CounterValue, 0))\\\\r\\\\n    by Computer, bin(TimeGenerated, 1h)\\\\r\\\\n| summarize \\\\r\\\\n    TotalLoads = sum(ProfileLoads),\\\\r\\\\n    TotalUnloads = sum(ProfileUnloads),\\\\r\\\\n    AvgLoadsPerHour = round(avg(ProfileLoads), 1),\\\\r\\\\n    PeakLoadsPerHour = max(ProfileLoads)\\\\r\\\\n    by bin(TimeGenerated, 1h)\\\\r\\\\n| extend ProfileTurnover = round(TotalLoads * 1.0 / nullif(TotalUnloads, 0), 2)\\\\r\\\\n| project TimeGenerated, TotalLoads, TotalUnloads, AvgLoadsPerHour, PeakLoadsPerHour\\\",\\\"size\\\":1,\\\"title\\\":\\\"ðŸ‘¤ Profile Load/Unload Activity\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"timechart\\\"},\\\"customWidth\\\":\\\"50\\\",\\\"name\\\":\\\"ProfileActivity\\\"}]},\\\"name\\\":\\\"UserAnalyticsGroup\\\"},{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"## ðŸ’¾ Storage Performance Deep Dive\\\\r\\\\n\\\\r\\\\nDetailed analysis of disk performance metrics to inform ANF sizing decisions.\\\"},\\\"name\\\":\\\"StorageDeepDiveHeader\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// Storage Performance Analysis - IOPS and Throughput\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName in (\\\\\\\"Disk Reads/sec\\\\\\\", \\\\\\\"Disk Writes/sec\\\\\\\", \\\\\\\"Disk Read Bytes/sec\\\\\\\", \\\\\\\"Disk Write Bytes/sec\\\\\\\")\\\\r\\\\n| where InstanceName != \\\\\\\"_Total\\\\\\\" and InstanceName !contains \\\\\\\"Harddisk\\\\\\\"\\\\r\\\\n| extend DiskLetter = extract(@\\\\\\\"([A-Z]):\\\\\\\", 1, InstanceName)\\\\r\\\\n| where DiskLetter in (\\\\\\\"C\\\\\\\", \\\\\\\"D\\\\\\\", \\\\\\\"O\\\\\\\", \\\\\\\"P\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"T\\\\\\\", \\\\\\\"U\\\\\\\", \\\\\\\"V\\\\\\\", \\\\\\\"W\\\\\\\", \\\\\\\"X\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"Z\\\\\\\")\\\\r\\\\n| summarize \\\\r\\\\n    ReadIOPS = avg(iff(CounterName == \\\\\\\"Disk Reads/sec\\\\\\\", CounterValue, 0)),\\\\r\\\\n    WriteIOPS = avg(iff(CounterName == \\\\\\\"Disk Writes/sec\\\\\\\", CounterValue, 0)),\\\\r\\\\n    ReadThroughputMBps = avg(iff(CounterName == \\\\\\\"Disk Read Bytes/sec\\\\\\\", CounterValue / 1048576, 0)),\\\\r\\\\n    WriteThroughputMBps = avg(iff(CounterName == \\\\\\\"Disk Write Bytes/sec\\\\\\\", CounterValue / 1048576, 0))\\\\r\\\\n    by Computer, DiskLetter, bin(TimeGenerated, 5m)\\\\r\\\\n| extend \\\\r\\\\n    TotalIOPS = ReadIOPS + WriteIOPS,\\\\r\\\\n    TotalThroughputMBps = ReadThroughputMBps + WriteThroughputMBps\\\\r\\\\n| summarize \\\\r\\\\n    AvgIOPS = avg(TotalIOPS),\\\\r\\\\n    PeakIOPS = max(TotalIOPS),\\\\r\\\\n    AvgThroughputMBps = avg(TotalThroughputMBps),\\\\r\\\\n    PeakThroughputMBps = max(TotalThroughputMBps)\\\\r\\\\n    by bin(TimeGenerated, 15m)\\\\r\\\\n| order by TimeGenerated asc\\\",\\\"size\\\":0,\\\"title\\\":\\\"ðŸ“ˆ IOPS and Throughput Trends\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"timechart\\\",\\\"chartSettings\\\":{\\\"seriesLabelSettings\\\":[{\\\"seriesName\\\":\\\"AvgIOPS\\\",\\\"label\\\":\\\"Average IOPS\\\",\\\"color\\\":\\\"blue\\\"},{\\\"seriesName\\\":\\\"PeakIOPS\\\",\\\"label\\\":\\\"Peak IOPS\\\",\\\"color\\\":\\\"red\\\"},{\\\"seriesName\\\":\\\"AvgThroughputMBps\\\",\\\"label\\\":\\\"Avg Throughput (MB/s)\\\",\\\"color\\\":\\\"green\\\"},{\\\"seriesName\\\":\\\"PeakThroughputMBps\\\",\\\"label\\\":\\\"Peak Throughput (MB/s)\\\",\\\"color\\\":\\\"orange\\\"}]}},\\\"name\\\":\\\"IOPSThroughputTrends\\\"},{\\\"type\\\":12,\\\"content\\\":{\\\"version\\\":\\\"NotebookGroup/1.0\\\",\\\"groupType\\\":\\\"editable\\\",\\\"items\\\":[{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// Disk Latency Analysis\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName in (\\\\\\\"Avg. Disk sec/Read\\\\\\\", \\\\\\\"Avg. Disk sec/Write\\\\\\\")\\\\r\\\\n| where InstanceName != \\\\\\\"_Total\\\\\\\" and InstanceName !contains \\\\\\\"Harddisk\\\\\\\"\\\\r\\\\n| extend DiskLetter = extract(@\\\\\\\"([A-Z]):\\\\\\\", 1, InstanceName)\\\\r\\\\n| where DiskLetter in (\\\\\\\"C\\\\\\\", \\\\\\\"D\\\\\\\", \\\\\\\"O\\\\\\\", \\\\\\\"P\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"T\\\\\\\", \\\\\\\"U\\\\\\\", \\\\\\\"V\\\\\\\", \\\\\\\"W\\\\\\\", \\\\\\\"X\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"Z\\\\\\\")\\\\r\\\\n| summarize \\\\r\\\\n    ReadLatencyMs = avg(iff(CounterName == \\\\\\\"Avg. Disk sec/Read\\\\\\\", CounterValue * 1000, 0)),\\\\r\\\\n    WriteLatencyMs = avg(iff(CounterName == \\\\\\\"Avg. Disk sec/Write\\\\\\\", CounterValue * 1000, 0))\\\\r\\\\n    by Computer, DiskLetter, bin(TimeGenerated, 15m)\\\\r\\\\n| extend AvgLatencyMs = (ReadLatencyMs + WriteLatencyMs) / 2\\\\r\\\\n| summarize \\\\r\\\\n    AvgReadLatency = avg(ReadLatencyMs),\\\\r\\\\n    AvgWriteLatency = avg(WriteLatencyMs),\\\\r\\\\n    OverallAvgLatency = avg(AvgLatencyMs),\\\\r\\\\n    MaxLatency = max(AvgLatencyMs)\\\\r\\\\n    by bin(TimeGenerated, 15m)\\\\r\\\\n| order by TimeGenerated asc\\\",\\\"size\\\":1,\\\"title\\\":\\\"âš¡ Disk Latency Analysis\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"timechart\\\"},\\\"customWidth\\\":\\\"50\\\",\\\"name\\\":\\\"DiskLatency\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// Queue Depth Analysis\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName == \\\\\\\"Current Disk Queue Length\\\\\\\"\\\\r\\\\n| where InstanceName != \\\\\\\"_Total\\\\\\\" and InstanceName !contains \\\\\\\"Harddisk\\\\\\\"\\\\r\\\\n| extend DiskLetter = extract(@\\\\\\\"([A-Z]):\\\\\\\", 1, InstanceName)\\\\r\\\\n| where DiskLetter in (\\\\\\\"C\\\\\\\", \\\\\\\"D\\\\\\\", \\\\\\\"O\\\\\\\", \\\\\\\"P\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"T\\\\\\\", \\\\\\\"U\\\\\\\", \\\\\\\"V\\\\\\\", \\\\\\\"W\\\\\\\", \\\\\\\"X\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"Z\\\\\\\")\\\\r\\\\n| summarize \\\\r\\\\n    AvgQueueDepth = avg(CounterValue),\\\\r\\\\n    MaxQueueDepth = max(CounterValue),\\\\r\\\\n    P95QueueDepth = percentile(CounterValue, 95)\\\\r\\\\n    by Computer, DiskLetter, bin(TimeGenerated, 15m)\\\\r\\\\n| summarize \\\\r\\\\n    OverallAvgQueueDepth = avg(AvgQueueDepth),\\\\r\\\\n    OverallMaxQueueDepth = max(MaxQueueDepth),\\\\r\\\\n    OverallP95QueueDepth = avg(P95QueueDepth)\\\\r\\\\n    by bin(TimeGenerated, 15m)\\\\r\\\\n| order by TimeGenerated asc\\\",\\\"size\\\":1,\\\"title\\\":\\\"ðŸ“Š Disk Queue Depth\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"timechart\\\"},\\\"customWidth\\\":\\\"50\\\",\\\"name\\\":\\\"QueueDepth\\\"}]},\\\"name\\\":\\\"StoragePerformanceGroup\\\"},{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"## ðŸŽ¯ ANF Sizing Recommendations\\\\r\\\\n\\\\r\\\\nBased on observed performance patterns, here are the recommended Azure NetApp Files configurations.\\\"},\\\"name\\\":\\\"ANFRecommendationsHeader\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// ANF Sizing Recommendations based on performance data\\\\r\\\\nlet timeRange = {TimeRange};\\\\r\\\\nlet anfRecommendations = \\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName in (\\\\\\\"Disk Read Bytes/sec\\\\\\\", \\\\\\\"Disk Write Bytes/sec\\\\\\\", \\\\\\\"Disk Reads/sec\\\\\\\", \\\\\\\"Disk Writes/sec\\\\\\\", \\\\\\\"Avg. Disk sec/Read\\\\\\\", \\\\\\\"Avg. Disk sec/Write\\\\\\\", \\\\\\\"Current Disk Queue Length\\\\\\\")\\\\r\\\\n| where InstanceName != \\\\\\\"_Total\\\\\\\" and InstanceName !contains \\\\\\\"Harddisk\\\\\\\"\\\\r\\\\n| extend DiskLetter = extract(@\\\\\\\"([A-Z]):\\\\\\\", 1, InstanceName)\\\\r\\\\n| where DiskLetter in (\\\\\\\"C\\\\\\\", \\\\\\\"D\\\\\\\", \\\\\\\"O\\\\\\\", \\\\\\\"P\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"T\\\\\\\", \\\\\\\"U\\\\\\\", \\\\\\\"V\\\\\\\", \\\\\\\"W\\\\\\\", \\\\\\\"X\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"Z\\\\\\\")\\\\r\\\\n| summarize \\\\r\\\\n    ReadThroughputMBps = avg(iff(CounterName == \\\\\\\"Disk Read Bytes/sec\\\\\\\", CounterValue / 1048576, 0)),\\\\r\\\\n    WriteThroughputMBps = avg(iff(CounterName == \\\\\\\"Disk Write Bytes/sec\\\\\\\", CounterValue / 1048576, 0)),\\\\r\\\\n    ReadIOPS = avg(iff(CounterName == \\\\\\\"Disk Reads/sec\\\\\\\", CounterValue, 0)),\\\\r\\\\n    WriteIOPS = avg(iff(CounterName == \\\\\\\"Disk Writes/sec\\\\\\\", CounterValue, 0)),\\\\r\\\\n    ReadLatencyMs = avg(iff(CounterName == \\\\\\\"Avg. Disk sec/Read\\\\\\\", CounterValue * 1000, 0)),\\\\r\\\\n    WriteLatencyMs = avg(iff(CounterName == \\\\\\\"Avg. Disk sec/Write\\\\\\\", CounterValue * 1000, 0)),\\\\r\\\\n    AvgQueueDepth = avg(iff(CounterName == \\\\\\\"Current Disk Queue Length\\\\\\\", CounterValue, 0))\\\\r\\\\n    by Computer, DiskLetter\\\\r\\\\n| extend \\\\r\\\\n    TotalThroughputMBps = ReadThroughputMBps + WriteThroughputMBps,\\\\r\\\\n    TotalIOPS = ReadIOPS + WriteIOPS,\\\\r\\\\n    AvgLatencyMs = (ReadLatencyMs + WriteLatencyMs) / 2\\\\r\\\\n| summarize \\\\r\\\\n    SessionHosts = dcount(Computer),\\\\r\\\\n    AvgThroughputMBps = round(avg(TotalThroughputMBps), 1),\\\\r\\\\n    PeakThroughputMBps = round(max(TotalThroughputMBps), 1),\\\\r\\\\n    AvgIOPS = round(avg(TotalIOPS), 0),\\\\r\\\\n    PeakIOPS = round(max(TotalIOPS), 0),\\\\r\\\\n    AvgLatencyMs = round(avg(AvgLatencyMs), 2),\\\\r\\\\n    MaxQueueDepth = round(max(AvgQueueDepth), 1)\\\\r\\\\n| extend \\\\r\\\\n    // ANF Performance Tier Recommendation\\\\r\\\\n    RecommendedTier = case(\\\\r\\\\n        PeakThroughputMBps \\\\u003e 400 or PeakIOPS \\\\u003e 40000 or AvgLatencyMs \\\\u003e 20, \\\\\\\"Ultra\\\\\\\",\\\\r\\\\n        PeakThroughputMBps \\\\u003e 160 or PeakIOPS \\\\u003e 16000 or AvgLatencyMs \\\\u003e 10, \\\\\\\"Premium\\\\\\\",\\\\r\\\\n        \\\\\\\"Standard\\\\\\\"\\\\r\\\\n    ),\\\\r\\\\n    // Capacity Recommendation (with 30% growth buffer)\\\\r\\\\n    RecommendedCapacityTB = case(\\\\r\\\\n        RecommendedTier == \\\\\\\"Ultra\\\\\\\", round((PeakThroughputMBps * 1.3) / 128, 1), // Ultra: 128 MiB/s per TiB\\\\r\\\\n        RecommendedTier == \\\\\\\"Premium\\\\\\\", round((PeakThroughputMBps * 1.3) / 64, 1), // Premium: 64 MiB/s per TiB  \\\\r\\\\n        round((PeakThroughputMBps * 1.3) / 16, 1) // Standard: 16 MiB/s per TiB\\\\r\\\\n    ),\\\\r\\\\n    // Minimum capacity based on tier\\\\r\\\\n    MinCapacityTB = case(\\\\r\\\\n        RecommendedTier == \\\\\\\"Ultra\\\\\\\", 4.0,\\\\r\\\\n        RecommendedTier == \\\\\\\"Premium\\\\\\\", 4.0,\\\\r\\\\n        4.0\\\\r\\\\n    ),\\\\r\\\\n    // Cost estimation (rough monthly costs)\\\\r\\\\n    EstimatedMonthlyCostUSD = case(\\\\r\\\\n        RecommendedTier == \\\\\\\"Ultra\\\\\\\", round(max_of(RecommendedCapacityTB, 4.0) * 1024 * 0.000694 * 730, 0), // $0.000694/GiB/hour\\\\r\\\\n        RecommendedTier == \\\\\\\"Premium\\\\\\\", round(max_of(RecommendedCapacityTB, 4.0) * 1024 * 0.000347 * 730, 0), // $0.000347/GiB/hour\\\\r\\\\n        round(max_of(RecommendedCapacityTB, 4.0) * 1024 * 0.000181 * 730, 0) // $0.000181/GiB/hour\\\\r\\\\n    )\\\\r\\\\n| extend \\\\r\\\\n    FinalCapacityTB = round(max_of(RecommendedCapacityTB, MinCapacityTB), 1),\\\\r\\\\n    PerformanceCharacteristics = strcat(\\\\r\\\\n        \\\\\\\"Max Throughput: \\\\\\\", PeakThroughputMBps, \\\\\\\" MB/s, \\\\\\\",\\\\r\\\\n        \\\\\\\"Max IOPS: \\\\\\\", PeakIOPS, \\\\\\\", \\\\\\\",\\\\r\\\\n        \\\\\\\"Avg Latency: \\\\\\\", AvgLatencyMs, \\\\\\\" ms\\\\\\\"\\\\r\\\\n    ),\\\\r\\\\n    Recommendation = strcat(\\\\r\\\\n        \\\\\\\"ANF \\\\\\\", RecommendedTier, \\\\\\\" tier - \\\\\\\", FinalCapacityTB, \\\\\\\" TiB capacity\\\\\\\"\\\\r\\\\n    )\\\\r\\\\n| project \\\\r\\\\n    [\\\\\\\"Session Hosts\\\\\\\"] = SessionHosts,\\\\r\\\\n    [\\\\\\\"Performance Tier\\\\\\\"] = RecommendedTier,\\\\r\\\\n    [\\\\\\\"Recommended Capacity (TiB)\\\\\\\"] = FinalCapacityTB,\\\\r\\\\n    [\\\\\\\"Peak Throughput (MB/s)\\\\\\\"] = PeakThroughputMBps,\\\\r\\\\n    [\\\\\\\"Peak IOPS\\\\\\\"] = PeakIOPS,\\\\r\\\\n    [\\\\\\\"Avg Latency (ms)\\\\\\\"] = AvgLatencyMs,\\\\r\\\\n    [\\\\\\\"Est. Monthly Cost (USD)\\\\\\\"] = EstimatedMonthlyCostUSD,\\\\r\\\\n    [\\\\\\\"Full Recommendation\\\\\\\"] = Recommendation;\\\\r\\\\nanfRecommendations\\\",\\\"size\\\":0,\\\"title\\\":\\\"ðŸ’° ANF Sizing \\\\u0026 Cost Recommendations\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"table\\\",\\\"gridSettings\\\":{\\\"formatters\\\":[{\\\"columnMatch\\\":\\\"Performance Tier\\\",\\\"formatter\\\":18,\\\"formatOptions\\\":{\\\"thresholds\\\":[{\\\"color\\\":\\\"green\\\",\\\"value\\\":\\\"Standard\\\"},{\\\"color\\\":\\\"yellow\\\",\\\"value\\\":\\\"Premium\\\"},{\\\"color\\\":\\\"red\\\",\\\"value\\\":\\\"Ultra\\\"}]}},{\\\"columnMatch\\\":\\\"Recommended Capacity (TiB)\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"blue\\\"}},{\\\"columnMatch\\\":\\\"Peak Throughput (MB/s)\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"orange\\\"}},{\\\"columnMatch\\\":\\\"Avg Latency (ms)\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"red\\\",\\\"thresholds\\\":[{\\\"color\\\":\\\"green\\\",\\\"value\\\":0},{\\\"color\\\":\\\"yellow\\\",\\\"value\\\":10},{\\\"color\\\":\\\"red\\\",\\\"value\\\":20}]}},{\\\"columnMatch\\\":\\\"Est. Monthly Cost (USD)\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"purple\\\"},\\\"numberFormat\\\":{\\\"unit\\\":0,\\\"options\\\":{\\\"style\\\":\\\"currency\\\",\\\"currency\\\":\\\"USD\\\"}}}]}},\\\"name\\\":\\\"ANFRecommendations\\\"},{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"## ðŸ“Š System Resource Utilization\\\\r\\\\n\\\\r\\\\nMonitor CPU, Memory, and Network utilization to ensure balanced resource allocation.\\\"},\\\"name\\\":\\\"SystemResourcesHeader\\\"},{\\\"type\\\":12,\\\"content\\\":{\\\"version\\\":\\\"NotebookGroup/1.0\\\",\\\"groupType\\\":\\\"editable\\\",\\\"items\\\":[{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// CPU and Memory Utilization\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName in (\\\\\\\"% Processor Time\\\\\\\", \\\\\\\"Available MBytes\\\\\\\", \\\\\\\"% Committed Bytes In Use\\\\\\\")\\\\r\\\\n| summarize \\\\r\\\\n    AvgCpuUsage = avg(iff(CounterName == \\\\\\\"% Processor Time\\\\\\\", CounterValue, 0)),\\\\r\\\\n    AvgMemoryAvailableMB = avg(iff(CounterName == \\\\\\\"Available MBytes\\\\\\\", CounterValue, 0)),\\\\r\\\\n    AvgMemoryUsagePercent = avg(iff(CounterName == \\\\\\\"% Committed Bytes In Use\\\\\\\", CounterValue, 0))\\\\r\\\\n    by Computer, bin(TimeGenerated, 15m)\\\\r\\\\n| summarize \\\\r\\\\n    AvgCpuUsage = avg(AvgCpuUsage),\\\\r\\\\n    AvgMemoryAvailableMB = avg(AvgMemoryAvailableMB),\\\\r\\\\n    AvgMemoryUsagePercent = avg(AvgMemoryUsagePercent)\\\\r\\\\n    by bin(TimeGenerated, 15m)\\\\r\\\\n| order by TimeGenerated asc\\\",\\\"size\\\":1,\\\"title\\\":\\\"ðŸ’» CPU \\\\u0026 Memory Utilization\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"timechart\\\"},\\\"customWidth\\\":\\\"50\\\",\\\"name\\\":\\\"CpuMemoryUtil\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// Network Utilization\\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName == \\\\\\\"Bytes Total/sec\\\\\\\"\\\\r\\\\n| where ObjectName == \\\\\\\"Network Interface\\\\\\\"\\\\r\\\\n| where InstanceName !contains \\\\\\\"Loopback\\\\\\\" and InstanceName !contains \\\\\\\"isatap\\\\\\\" and InstanceName !contains \\\\\\\"Teredo\\\\\\\"\\\\r\\\\n| summarize \\\\r\\\\n    NetworkThroughputMBps = avg(CounterValue / 1048576)\\\\r\\\\n    by Computer, bin(TimeGenerated, 15m)\\\\r\\\\n| summarize \\\\r\\\\n    AvgNetworkThroughputMBps = avg(NetworkThroughputMBps),\\\\r\\\\n    PeakNetworkThroughputMBps = max(NetworkThroughputMBps)\\\\r\\\\n    by bin(TimeGenerated, 15m)\\\\r\\\\n| order by TimeGenerated asc\\\",\\\"size\\\":1,\\\"title\\\":\\\"ðŸŒ Network Utilization\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"timechart\\\"},\\\"customWidth\\\":\\\"50\\\",\\\"name\\\":\\\"NetworkUtil\\\"}]},\\\"name\\\":\\\"SystemResourcesGroup\\\"},{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"## ðŸ“‹ Key Insights \\\\u0026 Action Items\\\\r\\\\n\\\\r\\\\nBased on the performance data analysis, here are the key recommendations for your AVD storage strategy.\\\"},\\\"name\\\":\\\"InsightsHeader\\\"},{\\\"type\\\":3,\\\"content\\\":{\\\"version\\\":\\\"KqlItem/1.0\\\",\\\"query\\\":\\\"// Key Insights and Recommendations Summary\\\\r\\\\nlet timeRange = {TimeRange};\\\\r\\\\nlet insights = \\\\r\\\\nPerf\\\\r\\\\n| where TimeGenerated \\\\u003e= ago({TimeRange:grain})\\\\r\\\\n| where CounterName in (\\\\\\\"Disk Read Bytes/sec\\\\\\\", \\\\\\\"Disk Write Bytes/sec\\\\\\\", \\\\\\\"Avg. Disk sec/Read\\\\\\\", \\\\\\\"Avg. Disk sec/Write\\\\\\\", \\\\\\\"Active Sessions\\\\\\\")\\\\r\\\\n| summarize \\\\r\\\\n    AvgThroughputMBps = round(avg(iff(CounterName in (\\\\\\\"Disk Read Bytes/sec\\\\\\\", \\\\\\\"Disk Write Bytes/sec\\\\\\\"), CounterValue / 1048576, 0)), 1),\\\\r\\\\n    AvgLatencyMs = round(avg(iff(CounterName in (\\\\\\\"Avg. Disk sec/Read\\\\\\\", \\\\\\\"Avg. Disk sec/Write\\\\\\\"), CounterValue * 1000, 0)), 2),\\\\r\\\\n    PeakUsers = round(max(iff(CounterName == \\\\\\\"Active Sessions\\\\\\\", CounterValue, 0)), 0)\\\\r\\\\n| extend \\\\r\\\\n    PerformanceScore = case(\\\\r\\\\n        AvgLatencyMs \\\\u003c 5, \\\\\\\"Excellent\\\\\\\",\\\\r\\\\n        AvgLatencyMs \\\\u003c 15, \\\\\\\"Good\\\\\\\", \\\\r\\\\n        \\\\\\\"Needs Improvement\\\\\\\"\\\\r\\\\n    ),\\\\r\\\\n    StorageRecommendation = case(\\\\r\\\\n        AvgThroughputMBps \\\\u003e 200, \\\\\\\"Consider Ultra ANF for high throughput workloads\\\\\\\",\\\\r\\\\n        AvgThroughputMBps \\\\u003e 80, \\\\\\\"Premium ANF recommended for balanced performance/cost\\\\\\\",\\\\r\\\\n        \\\\\\\"Standard ANF should meet current requirements\\\\\\\"\\\\r\\\\n    ),\\\\r\\\\n    LatencyRecommendation = case(\\\\r\\\\n        AvgLatencyMs \\\\u003e 20, \\\\\\\"High latency detected - Ultra ANF strongly recommended\\\\\\\",\\\\r\\\\n        AvgLatencyMs \\\\u003e 10, \\\\\\\"Moderate latency - Premium ANF recommended\\\\\\\",\\\\r\\\\n        \\\\\\\"Current latency is acceptable\\\\\\\"\\\\r\\\\n    ),\\\\r\\\\n    ScalingInsight = case(\\\\r\\\\n        PeakUsers \\\\u003e 50, \\\\\\\"High user density - ensure sufficient ANF capacity for concurrent access\\\\\\\",\\\\r\\\\n        PeakUsers \\\\u003e 20, \\\\\\\"Moderate user density - monitor capacity during peak hours\\\\\\\",\\\\r\\\\n        \\\\\\\"Current user density is manageable\\\\\\\"\\\\r\\\\n    )\\\\r\\\\n| project \\\\r\\\\n    [\\\\\\\"Metric\\\\\\\"] = \\\\\\\"Current Performance\\\\\\\",\\\\r\\\\n    [\\\\\\\"Avg Throughput (MB/s)\\\\\\\"] = AvgThroughputMBps,\\\\r\\\\n    [\\\\\\\"Avg Latency (ms)\\\\\\\"] = AvgLatencyMs,\\\\r\\\\n    [\\\\\\\"Peak Users\\\\\\\"] = PeakUsers,\\\\r\\\\n    [\\\\\\\"Performance Score\\\\\\\"] = PerformanceScore,\\\\r\\\\n    [\\\\\\\"Storage Recommendation\\\\\\\"] = StorageRecommendation,\\\\r\\\\n    [\\\\\\\"Latency Recommendation\\\\\\\"] = LatencyRecommendation,\\\\r\\\\n    [\\\\\\\"Scaling Insight\\\\\\\"] = ScalingInsight;\\\\r\\\\ninsights\\\\r\\\\nunion\\\\r\\\\n(\\\\r\\\\ndatatable([\\\\\\\"Metric\\\\\\\"] : string, [\\\\\\\"Avg Throughput (MB/s)\\\\\\\"] : real, [\\\\\\\"Avg Latency (ms)\\\\\\\"] : real, [\\\\\\\"Peak Users\\\\\\\"] : real, \\\\r\\\\n          [\\\\\\\"Performance Score\\\\\\\"] : string, [\\\\\\\"Storage Recommendation\\\\\\\"] : string, [\\\\\\\"Latency Recommendation\\\\\\\"] : string, [\\\\\\\"Scaling Insight\\\\\\\"] : string) [\\\\r\\\\n    \\\\\\\"Best Practices\\\\\\\", 0.0, 0.0, 0.0, \\\\\\\"Reference\\\\\\\", \\\\\\\"Right-size ANF capacity based on peak throughput + 30% buffer\\\\\\\", \\\\\\\"Monitor latency trends and adjust tier if needed\\\\\\\", \\\\\\\"Plan for 20-30% user growth in ANF capacity planning\\\\\\\"\\\\r\\\\n]\\\\r\\\\n)\\\",\\\"size\\\":0,\\\"title\\\":\\\"ðŸŽ¯ Executive Summary \\\\u0026 Action Items\\\",\\\"timeContextFromParameter\\\":\\\"TimeRange\\\",\\\"queryType\\\":0,\\\"resourceType\\\":\\\"microsoft.operationalinsights/workspaces\\\",\\\"crossComponentResources\\\":[\\\"{Workspace}\\\"],\\\"visualization\\\":\\\"table\\\",\\\"gridSettings\\\":{\\\"formatters\\\":[{\\\"columnMatch\\\":\\\"Performance Score\\\",\\\"formatter\\\":18,\\\"formatOptions\\\":{\\\"thresholds\\\":[{\\\"color\\\":\\\"green\\\",\\\"value\\\":\\\"Excellent\\\"},{\\\"color\\\":\\\"yellow\\\",\\\"value\\\":\\\"Good\\\"},{\\\"color\\\":\\\"red\\\",\\\"value\\\":\\\"Needs Improvement\\\"},{\\\"color\\\":\\\"blue\\\",\\\"value\\\":\\\"Reference\\\"}]}},{\\\"columnMatch\\\":\\\"Avg Throughput (MB/s)\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"green\\\",\\\"showIcon\\\":true}},{\\\"columnMatch\\\":\\\"Avg Latency (ms)\\\",\\\"formatter\\\":4,\\\"formatOptions\\\":{\\\"palette\\\":\\\"red\\\",\\\"thresholds\\\":[{\\\"color\\\":\\\"green\\\",\\\"value\\\":0},{\\\"color\\\":\\\"yellow\\\",\\\"value\\\":10},{\\\"color\\\":\\\"red\\\",\\\"value\\\":20}]}}],\\\"rowLimit\\\":10,\\\"filter\\\":true}},\\\"name\\\":\\\"KeyInsights\\\"},{\\\"type\\\":1,\\\"content\\\":{\\\"json\\\":\\\"---\\\\r\\\\n\\\\r\\\\n## ðŸ“š ANF Performance Tier Reference\\\\r\\\\n\\\\r\\\\n| **Tier** | **Throughput per TiB** | **Max IOPS per TiB** | **Typical Use Cases** | **Starting Price/TiB/Month** |\\\\r\\\\n|-----------|------------------------|----------------------|----------------------|-------------------------------|\\\\r\\\\n| **Standard** | 16 MiB/s | 320 | General file shares, light workloads | ~$135 |\\\\r\\\\n| **Premium** | 64 MiB/s | 1,280 | AVD profiles, moderate I/O workloads | ~$260 |\\\\r\\\\n| **Ultra** | 128 MiB/s | 2,560 | High-performance workloads, databases | ~$520 |\\\\r\\\\n\\\\r\\\\n*Minimum capacity: 4 TiB per volume | Prices are estimates and may vary by region*\\\\r\\\\n\\\\r\\\\n### ðŸ” How to Use This Workbook:\\\\r\\\\n1. **Start with the Executive Summary** to get quick insights\\\\r\\\\n2. **Review User Session Analytics** to understand peak usage patterns\\\\r\\\\n3. **Analyze Storage Performance** metrics to identify bottlenecks\\\\r\\\\n4. **Use ANF Recommendations** to size your Azure NetApp Files deployment\\\\r\\\\n5. **Monitor System Resources** to ensure balanced performance\\\\r\\\\n\\\\r\\\\n### ðŸ“Š Data Collection Notes:\\\\r\\\\n- Performance data is collected every minute from AVD session hosts\\\\r\\\\n- Recommendations include a 30% capacity buffer for growth\\\\r\\\\n- Cost estimates are based on standard Azure pricing (actual costs may vary)\\\\r\\\\n- For production deployments, monitor for at least 2-4 weeks to capture usage patterns\\\"},\\\"name\\\":\\\"ReferenceGuide\\\"}],\\\"styleSettings\\\":{\\\"spacingStyle\\\":\\\"narrow\\\"},\\\"$schema\\\":\\\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\\\"}"
                                         }
                      }
                  ],
    "outputs":  {
                    "logAnalyticsWorkspaceId":  {
                                                    "type":  "string",
                                                    "value":  "[resourceId(\u0027Microsoft.OperationalInsights/workspaces\u0027, parameters(\u0027logAnalyticsWorkspaceName\u0027))]"
                                                },
                    "logAnalyticsWorkspaceName":  {
                                                      "type":  "string",
                                                      "value":  "[parameters(\u0027logAnalyticsWorkspaceName\u0027)]"
                                                  },
                    "dataCollectionRuleId":  {
                                                 "type":  "string",
                                                 "value":  "[resourceId(\u0027Microsoft.Insights/dataCollectionRules\u0027, variables(\u0027dataCollectionRuleName\u0027))]"
                                             },
                    "dataCollectionEndpointId":  {
                                                     "type":  "string",
                                                     "value":  "[resourceId(\u0027Microsoft.Insights/dataCollectionEndpoints\u0027, variables(\u0027dataCollectionEndpointName\u0027))]"
                                                 },
                    "managedIdentityId":  {
                                              "type":  "string",
                                              "value":  "[resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, variables(\u0027managedIdentityName\u0027))]"
                                          },
                    "managedIdentityPrincipalId":  {
                                                       "type":  "string",
                                                       "value":  "[reference(resourceId(\u0027Microsoft.ManagedIdentity/userAssignedIdentities\u0027, variables(\u0027managedIdentityName\u0027)), \u00272023-01-31\u0027).principalId]"
                                                   }
                }
}
